#!/usr/bin/env ruby

bits = ARGF.readlines.map(&:chomp).slice_before { _1 == "" }.to_a

instructions = bits.first.first
rules = {}

bits.last.each do |rule|
  next if rule.empty?
  from, left, right = rule.match(/(\w+) = \((\w+), (\w+)\)/)[1 .. 3]

  rules[from] = { :L => left, :R => right }
end

steps = 0
node = 'AAA'

instructions.chars.cycle.with_index do |inst|
  steps += 1
  node   = rules[node][inst.to_sym]

  break if node == 'ZZZ'
end

puts steps # 13207
